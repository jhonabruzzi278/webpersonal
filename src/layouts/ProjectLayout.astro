---
import Layout from './Layout.astro';

const { title, link, github, image, tags } = Astro.props.frontmatter;
import NextJs from '../components/icons/NextJs.astro';
import TailwindCSS from '../components/icons/TailwindCSS.astro';
import Clerk from '../components/icons/Clerk.astro';
import NodeJs from '../components/icons/NodeJs.astro';
import Code from '../components/icons/Code.astro';

// Función para obtener el nombre display de la tecnología
const getDisplayName = (tech: string) => {
  const displayNames: Record<string, string> = {
    'NEXTJS': 'Next.js',
    'NEXT.JS': 'Next.js',
    'TAILWINDCSS': 'Tailwind CSS',
    'TAILWIND': 'Tailwind CSS',
    'TAILWIND CSS': 'Tailwind CSS',
    'ASTRO': 'Astro',
    'STRIPE': 'Stripe',
    'CLERK': 'Clerk',
    'NODEJS': 'Node.js',
    'NODE.JS': 'Node.js',
    'EXPRESS': 'Express',
    'MONGODB': 'MongoDB',
    'JWT': 'JWT',
    'TYPESCRIPT': 'TypeScript',
    'JAVASCRIPT': 'JavaScript',
    'API': 'API',
    'REST': 'REST API',
  };
  return displayNames[tech.toUpperCase()] || tech;
};
---

<Layout title={title} description={`Proyecto: ${title}`}>
  <main class="container mx-auto px-4 py-8 max-w-4xl">
    <!-- Botón de regreso -->
    <div class="mb-6">
      <a 
        href="/proyectos" 
        class="inline-flex items-center gap-2 text-white/70 hover:text-white transition-colors"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        Volver a proyectos
      </a>
    </div>

    <!-- Contenido del proyecto -->
    <article class="rounded-2xl overflow-hidden bg-white/5 border border-white/10 shadow-lg">
      <!-- Imagen del proyecto -->
      <div class="relative w-full h-64 md:h-80 bg-white/5 overflow-hidden">
        <img 
          src={image} 
          alt={`Preview de ${title}`} 
          class="object-cover w-full h-full" 
          loading="lazy" 
        />
      </div>

      <!-- Contenido -->
      <div class="p-6 md:p-8 flex flex-col gap-6">
        <!-- Título -->
        <h1 class="text-3xl md:text-4xl font-bold text-white">{title}</h1>
        
        <!-- Descripción -->
        <div class="prose prose-invert max-w-none text-white/80 leading-relaxed">
          <slot />
        </div>
        
        <!-- Tecnologías -->
        <div class="flex flex-wrap gap-2">
          {tags.filter((tag: string) => tag.toUpperCase() !== 'STRIPE').map((tag: string) => {
            const techUpper = tag.toUpperCase();
            const displayName = getDisplayName(tag);
            
            return (
              <span class="inline-flex items-center gap-1.5 rounded-md border border-white/20 bg-white/10 text-white/80 hover:bg-white/20 transition-colors px-3 py-1.5 text-sm font-medium">
                {techUpper === 'ASTRO' && <img src="/astro.svg" alt={displayName} class="size-4" />}
                {techUpper === 'NEXTJS' && <NextJs class="size-4" />}
                {techUpper === 'NEXT.JS' && <NextJs class="size-4" />}
                {(techUpper === 'TAILWINDCSS' || techUpper === 'TAILWIND' || techUpper === 'TAILWIND CSS') && <TailwindCSS class="size-4" />}
                {techUpper === 'CLERK' && <Clerk class="size-4" />}
                {(techUpper === 'NODEJS' || techUpper === 'NODE.JS' || techUpper === 'EXPRESS') && <NodeJs class="size-4" />}
                {(techUpper === 'MONGODB' || techUpper === 'JWT' || techUpper === 'JAVASCRIPT' || techUpper === 'API' || techUpper === 'REST') && <Code class="size-4" />}
                {displayName}
              </span>
            );
          })}
        </div>
        
        <!-- Enlaces -->
        <div class="flex flex-col sm:flex-row gap-4 pt-4">
          <a 
            href={link} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-3 rounded-lg transition-colors"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
            </svg>
            Ver sitio web
          </a>
          
          <a 
            href={github} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center justify-center gap-2 border border-white/20 text-white hover:bg-white/10 font-medium px-6 py-3 rounded-lg transition-colors"
          >
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
            Ver código
          </a>
        </div>
      </div>
    </article>
  </main>
</Layout>
